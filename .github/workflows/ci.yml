name: CI - Build Docker

on:
  push:
    branches: [main]
    tags:
      - "v*"
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run unit tests
        run: |
          # run all tests (this repository has no library target)
          cargo test --all

  bundle-web:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install cargo-binstall via official installer script
        run: |
          echo "Downloading official cargo-binstall installer script"
          curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh -o /tmp/install-binstall.sh
          chmod +x /tmp/install-binstall.sh
          echo "Running cargo-binstall installer"
          /tmp/install-binstall.sh

      - name: Use cargo-binstall to install dioxus-cli
        run: |
          cargo binstall dioxus-cli

      - name: Bundle web assets
        run: |
          echo "Bundling web assets to web"
          $HOME/.cargo/bin/dx bundle --platform web --release --out-dir web
          ls -la web || true

      - name: Upload web artifact
        uses: actions/upload-artifact@v4
        with:
          name: web
          path: web

  prepare-recipe:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install cargo-chef and prepare recipe
        run: |
          cargo install cargo-chef --locked --force
          cargo chef prepare --recipe-path recipe.json

      - name: Upload recipe.json
        uses: actions/upload-artifact@v4
        with:
          name: recipe
          path: recipe.json

  image-tags:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      all_tags: ${{ steps.tags.outputs.all_tags }}
    steps:
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Prepare docker tags
        id: tags
        run: |
          meta_tags="${{ steps.meta.outputs.tags }}"
          extra_tags=""
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            extra_tags="ghcr.io/${{ github.repository }}:nightly"
          fi
          if [[ "${GITHUB_REF}" =~ ^refs/tags/v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            ver="${GITHUB_REF#refs/tags/}"
            extra_tags="${extra_tags} ghcr.io/${{ github.repository }}:latest ghcr.io/${{ github.repository }}:${ver}"
          fi
          all_tags="${meta_tags} ${extra_tags}"
          read -a arr <<< "$all_tags"
          declare -A seen
          out=""
          for t in "${arr[@]}"; do
            if [[ -n "$t" && -z "${seen[$t]}" ]]; then
              seen[$t]=1
              out+="$t "
            fi
          done
          out="${out%% }"
          echo "all_tags=$out" >> $GITHUB_OUTPUT

  build-and-push-image:
    needs: [bundle-web, prepare-recipe, image-tags]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download web artifact
        uses: actions/download-artifact@v4
        with:
          name: web
          path: web

      - name: Download recipe.json
        uses: actions/download-artifact@v4
        with:
          name: recipe
          path: .

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ github.event_name == 'pull_request' && 'linux/amd64' || 'linux/amd64,linux/arm64' }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ needs.image-tags.outputs.all_tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
